---
openapi: 3.1.0

info:
  title: ICANN RST API
  description: |
    ICANN Registry System Testing (RST) API.
  version: 1.0.0
  termsOfService: https://www.icann.org/resources/registry-system-testing
  contact:
    name: Internet Corporation for Assigned Names and Numbers (ICANN)
    url: https://www.icann.org/resources/registry-system-testing
    email: rst@icann.org

servers:
  - url: https://api.rst.icann.org/v1
    description: Production server
  - url: https://api.rst-test.icann.org/v1
    description: Test server
  - url: https://api.rst-staging.icann.org/v1
    description: Staging server

mTLS: []

components:

  securitySchemes:
    mTLS:
      description: |
        All authentication for this API is achieved through the use of Mutual
        TLS (mTLS). API users must specify a fully-qualified domain name (FQDN)
        at which one or more `TLSA` records are published, using the `_https`
        application identifier, as per [draft-huque-dane-client-cert](https://www.ietf.org/archive/id/draft-huque-dane-client-cert-08.html#name-example-tlsa-records-for-cl)
      type: mutualTLS
      name: Mutual TLS (DANCE)

  schemas:

    eppTestParameters:
      description: Input parameters for EPP tests.
      type: object
      properties:
        input:
          description: |
            Name of the XML input file which must be uploaded along
            with the JSON object.
          type: string
          examples: [pdtepp.xml]

    rdapTestParameters:
      description: Input parameters for RDAP tests.
      type: object
      properties:

    rdeTestParameters:
      description: Input parameters for RDE tests.
      type: object
      properties:

    idnTestParameters:
      description: Input parameters for IDN tests.
      type: object
      properties:

    dnsTestParameters:
      description: Input parameters for DNS tests.
      type: object
      properties:

    dnssecTestParameters:
      description: Input parameters for DNSSEC tests.
      type: object
      properties:

    proxytestParameters:
      description: Input parameters for SRS Gateway tests.
      type: object
      properties:

    testPlanReference:
      description: |
        Instead of providing a detailed test plan, one of the following
        reference codes may be used instead.
      type: string
      enum:
        - all-tests
        - all-epp-tests
        - all-rdap-tests
        - all-rde-tests
        - all-idn-tests
        - all-dns-tests
        - all-dnssec-tests
        - all-proxy-tests

    eppTestReference:
      description: Reference codes for EPP test plans.
      type: string
      enum:
        - eppTest01
        - eppTest02
        - eppTest03
        - etc

    rdapTestReference:
      description: Reference codes for RDAP test plans.
      type: string
      enum:
        - rdapTest01
        - rdapTest02
        - rdapTest03
        - etc

    rdeTestReference:
      description: Reference codes for RDE test plans.
      type: string
      enum:
        - rdeTest01
        - rdeTest02
        - rdeTest03
        - etc

    idnTestReference:
      description: Reference codes for IDN test plans.
      type: string
      enum:
        - rdeTest01
        - rdeTest02
        - rdeTest03
        - etc

    dnsTestReference:
      description: Reference codes for DNS test plans.
      type: string
      enum:
        - dnsTest01
        - dnsTest02
        - dnsTest03
        - etc

    dnssecTestReference:
      description: Reference codes for DNSSEC test plans.
      type: string
      enum:
        - dnssecTest01
        - dnssecTest02
        - dnssecTest03
        - etc

    proxyTestReference:
      description: Reference codes for SRS Gateway test plans.
      type: string
      enum:
        - proxyTest01
        - proxyTest02
        - proxyTest03
        - etc

    testPlan:
      description: |
        An object representing a test plan. A test plan is a set of
        test cases, grouped by area.
      type: object
      properties:
        eppTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/eppTestReference"
        rdapTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/rdapTestReference"
        rdeTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/rdeTestReference"
        idnTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/idnTestReference"
        dnsTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/dnsTestReference"
        dnssecTests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/dnssecTestReference"
        proxytests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/proxyTestReference"

    testParameters:
      description: |
        This object represents the parameters provided by the client which
         will be used to carry out tests.
      type: object
      properties:
        eppTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/eppTestParameters"
        rdapTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/rdapTestParameters"
        rdeTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/rdeTestParameters"
        idnTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/idnTestParameters"
        dnsTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/dnsTestParameters"
        dnssecTestParameters:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/dnssecTestParameters"
        proxytests:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/proxytestParameters"

    testRequest:
      allOf:
        - $ref: "#/components/schemas/testRequestBase"
      type: object

    testRequestSubmitted:
      allOf:
        - $ref: "#/components/schemas/testRequestBase"
      type: object
      properties:
        id:
          description: Unique ID for this test request.
          type: integer
          format: uint64
          examples: [987654321]

        requester:
          description: Unique ID for the user that submitted this request.
          type: string
          examples: [example]

        dateRequested:
          description: date/time when this request was submitted.
          type: string
          format: date-time

        dateStarted:
          description: date/time when the test run started (which may be null).
          type:
            - string
            - "null"
          format: date-time
          default: null

        dateCompleted:
          description: date/time when the test run finished (which may be null).
          type:
            - string
            - "null"
          format: date-time
          default: null

        status:
          description: |
            The status of this request.
            1. The **requested** value indicates that the request has been
               received, but a test run has not yet started.
            2. The **in-progress** value indicates that the test run has
               started, but has not yet been completed.
            3. The **completed** value indicates that the test run has
               completed.
          type: string
          enum:
            - requested
            - in-progress
            - completed
          default: requested

        result:
          description: |
            The outcome of the test run.
            1. The **pass** value indicates that the test run completed with no
               errors.
            2. The **fail** value indicates that at least one test failed.
            3. The **error** value indicates that an internal issue prevented
               the test run from completing.

            This value will be **null** unless the value of the *status*
            property has the value **completed**.
          type:
            - string
            - "null"
          enum:
            - pass
            - fail
            - error
          default: null

        testResults:
          description: |
            The result of the test run.

    testRequestBase:
      description: |
        An object representing a request for a test submitted by a client.
      type: object
      properties:
        tld:
          description: The TLD to which this test relates.
          type: string
          format: hostname
          maxLength: 63
          minLength: 3
          examples: [example]

        testPlan:
          description: |
            The test plan used requested.
          oneOf:
            - $ref: "#/components/schemas/testPlanReference"
            - $ref: "#/components/schemas/testPlan"

        testParameters:
          description: |
            The test parameters provided by the requester.
          oneOf:
            - $ref: "#/components/schemas/testParameters"

paths:
  /test:
    post:
      description: |
        Submit a new test request.

        This endpoint expects all input data to be provided as file uploads.

        At least one file **MUST** have the `application/json` content-type,
        which **MUST** contain a single `testRequest` object.

        All other files must correspond to the expected input files for the
        test plan, such as
          * pdtepp.xml
          * pdtwhois.xml
          * pdtidn.zip
          * etc

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary

  /tests:
    get:
      description: |
        Retrieve a list of test requests.
        * normal users will see all requests they've submitted.
        * superusers will see all requests
      parameters:
        - name: client
          in: query
          required: false
          schema:
            type: string
          description: limit results to specific client (superuser access only)
        - name: tld
          in: query
          required: false
          schema:
            type: string
          description: limit results to specific TLD (superuser access only)
      responses:
        '200':
          description: A successful response.
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/testRequestSubmitted"
        '400':
          description: Returned when the server receives a malformed request.
        '401':
          description: |
            Returned when the client has not provided any authentication
            credentials.
        '403':
          description: |
            Returned when the client has provided invalid authentication
            credentials, or some other policy prevents access.
        '405':
          description: Returned when the request method is invalid.
        '429':
          description: Returned when the client has exceeded rate limits.
        '500':
          description: Returned when there has been an internal server error.
